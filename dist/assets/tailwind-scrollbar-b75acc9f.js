import{f as v,t as f,a as p,p as $}from"./tailwindcss-f34f17cc.js";const S=r=>r&&r.__esModule?r.default:r;var g={importDefault:S};const k=v,U=f,{importDefault:h}=g,w=h(k),b=h(U),d=["track","thumb","corner"],s=(r,e)=>e?{"@supports (-moz-appearance:none)":r}:r,y=({addBase:r},e)=>{r({"*":s({"scrollbar-color":"initial","scrollbar-width":"initial"},e==="pseudoelements")})},u=()=>({...Object.fromEntries(d.map(r=>{const e=`&::-webkit-scrollbar-${r}`;return[[e,{"background-color":`var(--scrollbar-${r})`,"border-radius":`var(--scrollbar-${r}-radius)`}],[`${e}:hover`,{"background-color":`var(--scrollbar-${r}-hover, var(--scrollbar-${r}))`}],[`${e}:active`,{"background-color":`var(--scrollbar-${r}-active, var(--scrollbar-${r}-hover, var(--scrollbar-${r})))`}]]}).flat())}),m=({preferPseudoElements:r})=>({".scrollbar":{...u(),...s({"scrollbar-width":"auto","scrollbar-color":"var(--scrollbar-thumb, initial) var(--scrollbar-track, initial)"},r),"&::-webkit-scrollbar":{display:"block",width:"var(--scrollbar-width, 16px)",height:"var(--scrollbar-height, 16px)"}},".scrollbar-thin":{...u(),...s({"scrollbar-width":"thin","scrollbar-color":"var(--scrollbar-thumb, initial) var(--scrollbar-track, initial)"},r),"&::-webkit-scrollbar":{display:"block",width:"8px",height:"8px"}},".scrollbar-none":{...s({"scrollbar-width":"none"},r),"&::-webkit-scrollbar":{display:"none"}}}),C=({matchUtilities:r,theme:e})=>{const a=w(e("colors")),l=Object.fromEntries(Object.entries(a).map(([t,o])=>[t,b(o)]));d.forEach(t=>{r({[`scrollbar-${t}`]:o=>{const c=b(o);return{[`--scrollbar-${t}`]:`${c} !important`}}},{values:l,type:"color"})})},O=({theme:r,matchUtilities:e})=>{d.forEach(a=>{e({[`scrollbar-${a}-rounded`]:l=>({[`--scrollbar-${a}-radius`]:l})},{values:r("borderRadius")})})},z=({addUtilities:r},e)=>{r(m({preferPseudoElements:e==="pseudoelements"}))},B=({matchUtilities:r,theme:e})=>{["width","height"].forEach(a=>{r({[`scrollbar-${a[0]}`]:l=>({[`--scrollbar-${a}`]:l})},{values:e(a)})})};var E={addBaseStyles:y,addBaseSizeUtilities:z,addColorUtilities:C,addRoundedUtilities:O,addSizeUtilities:B};const{flagEnabled:i}=p,x=["hover","focus","focus-visible","active","enabled","disabled"],R=(r,e)=>r==="hover"&&i&&i(e(),"hoverOnlyWhenSupported")?"@media (hover: hover) and (pointer: fine) { &:hover }":`&:${r}`,V=(r,e)=>r==="hover"&&i&&i(e(),"hoverOnlyWhenSupported")?"@media (hover: hover) and (pointer: fine) { & }":"&",D=({addVariant:r,config:e})=>{x.forEach(a=>{r(a,({container:l})=>{const t=`-${a}`;let o=!1;return l.walkRules(c=>{c.walkDecls(/^--scrollbar-/,n=>{o=!0,n.prop.endsWith(t)||(n.prop+=t)})}),o?V(a,e):R(a,e)})})};var N={addVariantOverrides:D};const P=$,{addBaseStyles:W,addBaseSizeUtilities:j,addColorUtilities:F,addRoundedUtilities:I,addSizeUtilities:_}=E,{addVariantOverrides:M}=N;var G=P.withOptions((r={})=>e=>{let a=r.preferredStrategy??"standard";a!=="standard"&&a!=="pseudoelements"&&(console.warn("WARNING: tailwind-scrollbar preferredStrategy should be 'standard' or 'pseudoelements'"),a="standard"),W(e,a),j(e,a),F(e),M(e),r.nocompatible&&(I(e),_(e))});export{G as s};
